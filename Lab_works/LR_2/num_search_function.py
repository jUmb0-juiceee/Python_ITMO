from typing import List, Optional, Tuple


def num_search(n: int, l: int, r: int) -> list[int] | str:
    """
        Выполняет бинарный поиск числа в заданном диапазоне.

        Функция ищет число n в диапазоне [l, r], используя алгоритм бинарного поиска.
        Возвращает найденное число и количество попыток или сообщение об ошибке.

        Аргументы:
            n (int): Число, которое необходимо найти
            l (int): Левая граница диапазона поиска (включительно)
            r (int): Правая граница диапазона поиска (включительно)

        Возвращает:
            list or str: Если число найдено - список [найденное число, количество попыток],
                        если число вне диапазона - сообщение об ошибке

        Examples:
            num_search(5, 0, 10)
            [5, 1]

            num_search(15, 0, 10)
            'Данного числа нет в этом диапазоне, попробуйте задать данные ещё раз'
    """
    if l > r:
        return 'Левая граница не может быть больше правой, попробуйте задать данные ещё раз'
    if n > r or n < l:
        return 'Данного числа нет в этом диапазоне, попробуйте задать данные ещё раз'
    iterations = 1
    while l <= r:
        now = (l + r) // 2
        #Для более наглядного понимая работы программы можно раскоментировать строку ниже
        #print(f'Сейчас проверяем число {now}, это {iterations} попытка - [{l}, {r}]')
        if n == now:
            return [n, iterations]
        iterations += 1
        if now > n:
            r = now - 1
        else:
            l = now + 1


# logging
def main():
    """
        Основная функция программы для взаимодействия с пользователем.

        Запрашивает у пользователя число для поиска и границы диапазона,
        затем вызывает функцию бинарного поиска и выводит результат.

        Ввод:
            - Первая строка: число для поиска
            - Вторая строка: два числа через пробел - границы диапазона

        Вывод:
            Результат поиска в формате списка или строки с сообщением об ошибке
    """
    '''num = int(input())
    l_bound, r_bound = map(int, input().split())
    print(num_search(num, l_bound, r_bound))'''

    try:
        num = int(input("Введите число для поиска: "))
        l_bound, r_bound = map(int, input("Введите границы диапазона (через пробел): ").split())

        result = num_search(num, l_bound, r_bound)
        print(result)

    except ValueError as e:
        print(f"Ошибка ввода данных: {e}")
    except Exception as e:
        print(f"Произошла непредвиденная ошибка: {e}")


if __name__ == '__main__':
    main()

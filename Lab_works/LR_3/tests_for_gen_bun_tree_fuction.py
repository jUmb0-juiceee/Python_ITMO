from gen_bin_tree_function import gen_bin_tree
import unittest


class TestMySolution(unittest.TestCase):
    """
        Класс тестирования функции построения бинарного дерева.

        Содержит тестовые случаи для проверки на правильность построения
         бинарных деревьев с различными значениями корня и высоты.
    """

    def test_sample1(self) -> None:
        """
            Тест на построения дерева с корнем 17 и высотой 4.
        """
        self.assertEqual(gen_bin_tree(17, 4), {17: [
            {169: [{27225: [{740982841: [{}, {}]}, {54456: [{}, {}]}]}, {344: [{115600: [{}, {}]}, {694: [{}, {}]}]}]},
            {40: [{1296: [{1669264: [{}, {}]}, {2598: [{}, {}]}]}, {86: [{6724: [{}, {}]}, {178: [{}, {}]}]}]}]})

    def test_sample2(self) -> None:
        """
            Тест на построения дерева с корнем 20 и высотой 3.
        """
        self.assertEqual(gen_bin_tree(20, 3),
                         {20: [{256: [{63504: [{}, {}]}, {518: [{}, {}]}]}, {46: [{1764: [{}, {}]}, {98: [{}, {}]}]}]})

    def test_sample3(self) -> None:
        """
            Тест на построения дерева с корнем 5 и высотой 5.
        """
        self.assertEqual(gen_bin_tree(5, 5), {5: [{1: [
            {9: [{25: [{441: [{}, {}]}, {56: [{}, {}]}]}, {24: [{400: [{}, {}]}, {54: [{}, {}]}]}]},
            {8: [{16: [{144: [{}, {}]}, {38: [{}, {}]}]}, {22: [{324: [{}, {}]}, {50: [{}, {}]}]}]}]}, {16: [
            {144: [{19600: [{384003216: [{}, {}]}, {39206: [{}, {}]}]}, {294: [{84100: [{}, {}]}, {594: [{}, {}]}]}]},
            {38: [{1156: [{1327104: [{}, {}]}, {2318: [{}, {}]}]}, {82: [{6084: [{}, {}]}, {170: [{}, {}]}]}]}]}]})

    def test_sample4(self) -> None:
        self.assertEqual(gen_bin_tree('1', 3), 'Ошибка типа входных данных')

    def test_sample5(self) -> None:
        self.assertEqual(gen_bin_tree(5, 3.5), 'Ошибка типа входных данных')

if __name__ == '__main__':
    """
        Точка запуска тестов. 
    """
    unittest.main()
